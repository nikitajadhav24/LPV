# ServiceClient.java:

import ServiceModule.*;
import org.omg.CosNaming.*;
import org.omg.CORBA.*;
import java.util.Scanner;

public class ServiceClient {
	public static void main(String args[]) {
		try {
			ORB orb = ORB.init(args, null);
			org.omg.CORBA.Object objRef = orb.resolve_initial_references("NameService");
			NamingContextExt ncRef = NamingContextExtHelper.narrow(objRef);

			String name = "Service";
			ServiceInterface service = ServiceInterfaceHelper.narrow(ncRef.resolve_str(name));
			Scanner scanner = new Scanner(System.in);
			System.out.println("Enter num 1: ");
			float num1 = scanner.nextFloat();
			System.out.println("Enter num 2: ");
			float num2 = scanner.nextFloat();

			float resultAdd = service.add(num1, num2);
			float resultSub = service.sub(num1, num2);
			float resultMulti = service.multi(num1, num2);
			float resultDiv = service.div(num1, num2);

			System.out.println("At Client: add(" + num1 + "," + num2 + ") = " + resultAdd);
			System.out.println("At Client: sub(" + num1 + "," + num2 + ") = " + resultSub);
			System.out.println("At Client: multi(" + num1 + "," + num2 + ") = " + resultMulti);
			System.out.println("At Client: div(" + num1 + "," + num2 + ") = " + resultDiv);

			scanner.close();
			orb.shutdown(true);
		} catch (Exception e) {
			System.out.println("Exception: " + e);
		}
	}
}


# ServiceImpl.java

import ServiceModule.*;

public class ServiceImpl extends ServiceInterfacePOA {
	public float add(float num1, float num2) {
		float result = num1 + num2;
		System.out.println("At Server: add(" + num1 + "," + num2 + ") = " + result);
		return result;
	}
	public float sub(float num1, float num2) {
		float result = num1 - num2;
		System.out.println("At Server: sub(" + num1 + "," + num2 + ") = " + result);
		return result;
	}
	public float multi(float num1, float num2) {
		float result = num1 * num2;
		System.out.println("At Server: multi(" + num1 + "," + num2 + ") = " + result);
		return result;
	}
	public float div(float num1, float num2) {
		float result = num1 / num2;
		System.out.println("At Server: div(" + num1 + "," + num2 + ") = " + result);
		return result;
	}
}


# ServiceModule.idl

module ServiceModule {
	interface ServiceInterface {
		float add(in float num1, in float num2);
		float sub(in float num1, in float num2);
		float multi(in float num1, in float num2);
		float div(in float num1, in float num2);
	};
};


# ServiceServer.java

import ServiceModule.*;
import org.omg.CosNaming.*;
import org.omg.CORBA.*;
import org.omg.PortableServer.*;

public class ServiceServer {
	public static void main(String args[]) {
		try {
			ORB orb = ORB.init(args, null);
			POA rootpoa = POAHelper.narrow(orb.resolve_initial_references("RootPOA"));
			rootpoa.the_POAManager().activate();

			ServiceImpl serviceImpl = new ServiceImpl();

			org.omg.CORBA.Object ref = rootpoa.servant_to_reference(serviceImpl);
			ServiceInterface href = ServiceInterfaceHelper.narrow(ref);

			org.omg.CORBA.Object objRef = orb.resolve_initial_references("NameService");
			NamingContextExt ncRef = NamingContextExtHelper.narrow(objRef);

			String name = "Service";
			NameComponent path[] = ncRef.to_name(name);
			ncRef.rebind(path, href);

			System.out.println("Server Started...");

			orb.run();
		} catch (Exception e) {
			System.out.println("Exception: " + e);
		}
	}
}


# Command 

idlj -fall ServiceModule.idl
javac *.java ServiceModule/*.java
orbd -ORBInitialPort 1056

java ServiceServer -ORBInitialPort 1056

java ServiceClient -ORBInitialPort 1056 -ORBInitialHost localhost