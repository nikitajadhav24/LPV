#ServerImpl.java


import java.rmi.*;
import java.rmi.server.UnicastRemoteObject;

public class ServerImpl extends UnicastRemoteObject implements ServerIntf {
    public ServerImpl() throws RemoteException {
        super();
    }

    public double Add(double a, double b) throws RemoteException {
        return a + b;
    }
C:\Users\NIKITA\Desktop\Practical\ServerImpl.java
    public double Sub(double a, double b) throws RemoteException {
        return a - b;
    }

    public double Mul(double a, double b) throws RemoteException {
        return a * b;
    }

    public double Div(double a, double b) throws RemoteException {
        if (b == 0) {
            throw new ArithmeticException("Division by zero is not allowed.");
        }
        if (a == 0) {
            return 0;
        }
        return a / b;
    }
}




#ServerIntf.java


import java.rmi.*;
import java.rmi.server.UnicastRemoteObject;

public class ServerImpl extends UnicastRemoteObject implements ServerIntf {
    public ServerImpl() throws RemoteException {
        super();
    }

    public double Add(double a, double b) throws RemoteException {
        return a + b;
    }

    public double Sub(double a, double b) throws RemoteException {
        return a - b;
    }

    public double Mul(double a, double b) throws RemoteException {
        return a * b;
    }

    public double Div(double a, double b) throws RemoteException {
        if (b == 0) {
            throw new ArithmeticException("Division by zero is not allowed.");
        }
        if (a == 0) {
            return 0;
        }
        return a / b;
    }
}




#Server.java


import java.rmi.*;

public class Server {
    public static void main(String[] args) throws Exception {
        try {
            ServerImpl serverImpl = new ServerImpl();
            Naming.rebind("Server", serverImpl);
            System.out.println("Server is ready.");
        } catch (Exception e) {
            System.out.println("Server exception: " + e.getMessage());
        }
    }
}




#Client.java


import java.rmi.*;
import java.util.Scanner;

public class Client {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        try {
            String serverURL = "rmi://localhost/Server";
            ServerIntf server = (ServerIntf) Naming.lookup(serverURL);

            System.out.print("Enter first number: ");
            double a = sc.nextDouble();
            System.out.print("Enter second number: ");
            double b = sc.nextDouble();

            System.out.println("First number is " + a);
            System.out.println("Second number is " + b);

            System.out.println("Results:");
            System.out.println("Addition: " + server.Add(a, b));
            System.out.println("Subtraction: " + server.Sub(a, b));
            System.out.println("Multiplication: " + server.Mul(a, b));
            System.out.println("Division: " + server.Div(a, b));
        } catch (Exception e) {
            System.out.println("Client exception: " + e.getMessage());
        } finally {
            sc.close();
        }
    }
}



##command on cmd/powershell

##Commands To Execute Assignment-1:
	On Terminal-1:
		javac *.java
		rmiregistry

	On Terminal-2:
		java Server

	On Terminal-3:
		java Client




